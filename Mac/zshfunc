# 
# *********************************************************
# * Author        : LEI Sen
# * Email         : sen.lei@outlook.com
# * Create time   : 2019-03-03 10:00
# * Last modified : 2019-07-18 19:46
# * Filename      : .zshfunc
# * Description   : Customized ZSH Functions
# *********************************************************


function overleaf () {
    cd ~/OverleafProjects
    echo ''
    echo '--- Welcome to Overleaf Projects ---'
    echo ''
    ls -l
    if [[ -f .welcome2overleaf.sh ]]; then
	sh ./.welcome2overleaf.sh
    fi
}

function ccl () {
    # Clean some log like files of LaTex Compiling
    wd=$(pwd)
    if [[ ${wd} == "/Users/leisen/OverleafProjects"* ]];then
	sh ~/.zshfuncs/find_N_remove_log.sh
    else
	echo '[WARNING]: Current directory is not permitted for this operation! '
    fi
}

function ignorelog () {
    # Clean some log like files of LaTex Compiling
    sh ~/.zshfuncs/gitignore_log.sh
}

function checkname() {
    ## Check ComputerName, HostName, and LocalHostName
    for s in ComputerName HostName LocalHostName; do
	out=$(scutil --get $s);
	echo "${s}:\t${out}"
    done
    echo ''
    echo "You can use 'sudo scutil --set pref [newval]' to reset the name(s). "
}

function ws() {
    ## Change working directory to WorkSpace
    cd ~/WorkSpace/
    ls -l
    ./.welcome2workspace.sh
}

function wanip(){
    #PublicIp=$(curl getip.name)
    wanipv4=$(dig @resolver1.opendns.com A myip.opendns.com +short -4)
    wanipv6=$(dig @resolver1.opendns.com A myip.opendns.com +short -6)
    echo "WAN-IP-v4: ${wanipv4}"
    echo "WAN-IP-v6: ${wanipv6}"
    echo 'Finding locations ...'
    #curl http://api.db-ip.com/v2/free/$wanipv4
    curl ipinfo.io/$wanipv4
    echo ''
    echo '... Done. '
}

# function powerline_precmd() {
#     PS1="$(powerline-shell --shell zsh $?)"
# }
#
# function install_powerline_precmd() {
#     for s in "${precmd_functions[@]}"; do
# 	if [ "$s" = "powerline_precmd" ]; then
# 	    return
# 	fi
#     done
#     precmd_functions+=(powerline_precmd)
# }
# if [ "$TERM" != "linux" ]; then
#     install_powerline_precmd
# fi


#fpath=(~/.zsh/completion $fpath)

#autoload -Uz compinit && compinit -i


#etc=/Applications/Docker.app/Contents/Resources/etc
#ln -s $etc/docker.zsh-completion /usr/local/share/zsh/site-functions/_docker
#ln -s $etc/docker-machine.zsh-completion /usr/local/share/zsh/site-functions/_docker-machine
#ln -s $etc/docker-compose.zsh-completion /usr/local/share/zsh/site-functions/_docker-compose

